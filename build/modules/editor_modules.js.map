{"version":3,"file":"editor_modules.js","mappings":"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","sources":["webpack://custom-starter-view/webpack/bootstrap","webpack://custom-starter-view/webpack/runtime/define property getters","webpack://custom-starter-view/webpack/runtime/hasOwnProperty shorthand","webpack://custom-starter-view/webpack/runtime/make namespace object","webpack://custom-starter-view/./modules/behaviours/elements/DemoElement.js","webpack://custom-starter-view/./modules/behaviours/apps/index.js","webpack://custom-starter-view/./modules/behaviours/apps/article/ArticleDemoApp.js","webpack://custom-starter-view/./modules/plugins/slack_notifier/Notifier.js","webpack://custom-starter-view/./modules/plugins/slack_notifier/config.js","webpack://custom-starter-view/./modules/plugins/slack_notifier/callback.js","webpack://custom-starter-view/./modules/plugins/slack_notifier/index.js","webpack://custom-starter-view/./modules/plugins/slack_notifier/properties.js","webpack://custom-starter-view/./modules/Editor.js","webpack://custom-starter-view/./modules/collections/DemoCollection.js","webpack://custom-starter-view/./modules/index_editor.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default class DemoElement {\n\n    constructor(api) {\n        this.api = api;\n    }\n\n    onRender(model, view) {\n        const externalData = view.get('external');\n        if (!externalData) {\n            return;\n        }\n        if (externalData.properties && externalData.properties.timeseries && externalData.properties.timeseries[0]) {\n            model.setFiltered('air_temperature', this.api.v1.util.object.get('data.instant.details.air_temperature', externalData.properties.timeseries[0]));\n            model.setFiltered('wind_speed', this.api.v1.util.object.get('data.instant.details.wind_speed', externalData.properties.timeseries[0]));\n            model.setFiltered('symbol_code', this.api.v1.util.object.get('data.next_1_hours.summary.symbol_code', externalData.properties.timeseries[0]));\n        }\n    }\n\n    onSettingsPanel(model, view, settings) {\n        const locations = [\n            { location: 'Oslo', lat: '59.9333', lon: '10.7166' },\n            { location: 'Stockholm', lat: '59.3345', lon: '18.0632' },\n            { location: 'Copenhagen', lat: '55.6760', lon: '12.5683' },\n            { location: 'Helsinki', lat: '60.1920', lon: '24.9458' }\n        ];\n        model.setFiltered('locations', locations);\n        return {\n            // Return a handler for the settings panel\n            // Documentation: /support/docs/#view/modules/behaviours.md\n            // formValues will hold the property `location` defined in the name attribute in the settings template.\n            onSubmit: ({ formValues }) => {\n                if (formValues.location) {\n                    // Get selected location from the formValues and find matching lat and lon params from the definition above:\n                    const data = locations.filter((item) => item.location === formValues.location).pop();\n                    model.set('fields.lat', data.lat);\n                    model.set('fields.lon', data.lon);\n                    model.set('fields.location', data.location);\n                }\n            }\n            // onDisplay: ({ model, view, config, markup, modal }) => {\n            //     // ...\n            // },\n            // onHide: ({ model, view, config, markup, modal }) => {\n            //     // ...\n            // }\n        };\n    }\n\n}\n","import { ArticleDemoApp } from './article/ArticleDemoApp.js';\n\nexport default {\n    ArticleDemoApp\n};\n","export class ArticleDemoApp {\n\n    constructor(api, params) {\n        this.api = api;\n        this.rootModel = params.rootModel;\n        this.enabled = true;\n        this.template = `<div class=\"lab-modal-form lab-grid lab-hidden\">\n\n            <div class=\"lab-formgroup lab-grid lab-bordered\">\n                <h2 class=\"lab-title lab-grid-large-12 lab-space-below-large\">Article Demo App</h2>\n                <div class=\"lab-formgroup-item lab-grid-large-12 lab-space-below-medium\">\n                    <label for=\"demoTextField\">Demo text field</label>\n                    <input type=\"text\" value=\"{{ fields.demoTextField}}\" name=\"fields.demoTextField\" id=\"demoTextField\" placeholder=\"Placeholder for article demo app...\">\n                </div>\n            </div>\n\n        </div>`;\n    }\n\n    onAside() {\n        return {\n            section: 'Advanced',\n            label: 'Demo App'\n        };\n    }\n\n    onPaths() {\n        return {\n            'fields.demoTextField': { node: 'fields.demoTextField', validator: 'notEmpty' }\n        };\n    }\n\n    onMarkup() {\n        const markup = this.api.v1.util.dom.renderTemplate(this.template, {\n            fields: {\n                demoTextField: this.rootModel.get('fields.demoTextField')\n            }\n        }, true);\n        return markup;\n    }\n\n}\n","/**\n * Notifier.js\n * Send a message via a Slack webhook\n * The url is defined in the config.js file\n */\nimport config from './config.js';\n\nexport class Notifier {\n\n    static notify(txt) {\n        const payload = {\n            text: `${ txt }\\n(This is a demo message used by the Slack Notifier plugin)`\n        };\n        fetch(config.slack_webhook_url, {\n            method: 'POST',\n            body: JSON.stringify(payload)\n        }).then((res) => {\n            if (!res.ok) {\n                throw new Error(`Server error ${ res.status }`);\n            }\n            return res.text();\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n}\n","export default {\n    // Url for the Slack webhook\n    slack_webhook_url: 'https://hooks.slack.com/services/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'\n};\n","import { Notifier } from './Notifier.js';\n\n// This method is set as callback for the Slack-button in the content menu\n// Display a modal for user to enter a message and send it to Slack\nexport default (menu, event) => {\n    const model = menu.getModel();\n    const rootModel = lab_api.v1.model.query.getRootModel();\n    const url = `${ lab_api.v1.properties.get('customer_cms_url') }/edit/${ rootModel.getType().replace('page_', '') }/id/${ rootModel.getId() }`;\n    lab_api.v1.ui.modal.dialog({\n        content: {\n            title: 'Notify on Slack',\n            formgroups: [\n                {\n                    hasGrid: true,\n                    elements: [\n                        {\n                            grid: 12,\n                            id: 'text_area',\n                            label: 'Write a message to send to Slack',\n                            tag: 'textarea',\n                            attributes: [\n                                {\n                                    name: 'id',\n                                    value: 'text_area'\n                                },\n                                {\n                                    name: 'name',\n                                    value: 'text_area'\n                                }\n                            ],\n                            value: `Please have a look at row ${ model.getModelIndex() + 1 } at this page:\\n${ url }`\n                        }\n                    ]\n                }\n            ]\n        },\n        footer: {\n            informalText: 'This functionality is for demo purposes only',\n            buttons: [{\n                type: 'submit',\n                value: 'Send',\n                highlight: true\n            }]\n        },\n        callbacks: {\n            submit: (input) => {\n                Notifier.notify(input.text_area);\n            }\n        }\n    });\n\n};\n","/**\n * Slack Notifier plugin for Labrador CMS\n */\n\nimport properties from './properties.js';\nimport { Notifier } from './Notifier.js';\n\nexport default {\n    name: 'Slack Notifier',\n    description: 'Send a message to a Slack when a page is published or send a message manually.',\n    version: '1.0.0',\n    isEnabled: true,\n    elements: {\n        row: {\n            // Add properties for rows adding a button for manually sending a message to Slack\n            properties\n        }\n    },\n    entry: class {\n\n        onReady(api) {\n            this.api = api;\n\n            // Add the CSS file for the Slack Notifier plugin\n            this.api.v1.util.dom.addFile('css', '/view-resources/custom-starter-view/modules/plugins/slack_notifier/slack_notifier.css');\n\n            // Listen to publish-events from Labrador and post a message to Slack\n            this.api.v1.app.on('published', (params) => {\n                Notifier.notify(`Page ${ params.id } is published\\nFront: ${ params.url }\\nEditor: ${ lab_api.v1.properties.get('customer_cms_url') }/edit/${ params.type }/id/${ params.id }`);\n            });\n        }\n\n    }\n\n};\n","/**\n * Properties added to rows. Adds a button for manually sending a message to Slack.\n */\n\nimport callback from './callback.js';\n\nexport default {\n    contentMenus: {\n        slackMenu: {\n            position: 'right',\n            snapToTop: true,\n            style: {\n                'margin-top': '50px',\n                'margin-right': '-50px'\n            },\n            items: {\n                slack: {\n                    // Icon for the button. CSS defined in file slack_notifier.css\n                    icon: 'my_icons-slack',\n\n                    // Text for the button, displayed when hovering over it\n                    title: 'Send message to Slack',\n\n                    // Only display the button on top level rows\n                    displayCondition: 'hasParentOfTypes',\n                    params: {\n                        modelTypes: ['dropZone']\n                    },\n\n                    // Callback to be executed when the button is clicked\n                    callback\n                }\n            }\n        }\n    }\n};\n","\nexport default class {\n    onReady(api) {\n        this.api = api;\n        api.v1.app.on('published', this.onPublished);\n    }\n\n    onPublished(params) {\n        // Published with parameters available    \n    }\n}\n","/**\n * This is a demo collection that returns a list of elements of type 'demoElement'.\n * Each element has a set of locations used for fetching data from an external API.\n */\nexport default class {\n\n    constructor(api) {\n        this.api = api;\n    }\n\n    // Return an array of objects with location, lat and lon\n    // Users will be able to drag and drop these items onto the page\n    onGetData(uiInterface) {\n        return [\n            { location: 'Oslo', lat: '59.9333', lon: '10.7166' },\n            { location: 'Bergen', lat: '60.3894', lon: '5.33' },\n            { location: 'Trondheim', lat: '63.4308', lon: '10.4034' },\n            { location: 'Tromsø', lat: '69.6827', lon: '18.9427' },\n            { location: 'Vardø', lat: '70.3705', lon: '31.0241' }\n        ];\n    }\n\n    // Map the data to view-format that Labrador may understand.\n    // Documentation: /support/docs/#view/data/view-data-format.md\n    // The element has properties defining an external url to fetch data from.\n    // The location-fields (lat, lon) are used in this url.\n    onMapData(uiInterface, data) {\n        const results = [];\n        data.forEach((item) => {\n            results.push({\n                type: 'demoElement',\n                contentdata: {\n                    fields: {\n                        location: item.location,\n                        lat: item.lat,\n                        lon: item.lon\n                    }\n                }\n            });\n        });\n        return results;\n    }\n\n    // Use the location field as title for each item in the collection\n    onItemProperties(uiInterface) {\n        return {\n            title: {\n                path: 'fields.location'\n            }\n        };\n    }\n\n}\n","// Expose resources for Labrador rendering engine\n\nconst site = {};\nexport { site };\nimport { site as front } from '../index_front.js';\n\nexport * as behaviours from './behaviours/index.js';\nexport { default as appsModules } from './behaviours/apps/index.js';\nexport * as plugins from './plugins/index.js';\nexport { default as Entry } from './Editor.js';\nexport * as collections from './collections/index.js';\n\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","DemoElement","constructor","api","this","onRender","model","view","externalData","properties","timeseries","setFiltered","v1","util","object","onSettingsPanel","settings","locations","location","lat","lon","onSubmit","formValues","data","filter","item","pop","set","ArticleDemoApp","params","rootModel","enabled","template","onAside","section","label","onPaths","node","validator","onMarkup","dom","renderTemplate","fields","demoTextField","Notifier","notify","txt","payload","text","fetch","method","body","JSON","stringify","then","res","ok","Error","status","catch","error","console","log","name","description","version","isEnabled","elements","row","contentMenus","slackMenu","position","snapToTop","style","items","slack","icon","title","displayCondition","modelTypes","callback","menu","event","getModel","lab_api","query","getRootModel","url","getType","replace","getId","ui","modal","dialog","content","formgroups","hasGrid","grid","id","tag","attributes","getModelIndex","footer","informalText","buttons","type","highlight","callbacks","submit","input","text_area","entry","onReady","addFile","app","on","onPublished","onGetData","uiInterface","onMapData","results","forEach","push","contentdata","onItemProperties","path"],"sourceRoot":""}